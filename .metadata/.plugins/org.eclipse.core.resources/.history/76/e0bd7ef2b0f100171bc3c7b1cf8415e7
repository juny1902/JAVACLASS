class PartialSum extends Thread {

	private long sum = 0;
	private long start;
	private long end;

	public PartialSum(long start, long end) {
		this.start = start;
		this.end = end;
	}
	public long[] getDivision(int partition){
			long division[] = new long[partition + 1];
			long area = (this.end - this.start) / partition;
			for (int i = 0; i < partition + 1; i++) {
				division[i] = area * i;
				System.out.printf("division[%d] = %d\n", i, division[i]);
			}
			return division;
	}
	public long getSum() {
		return sum;
	}

	public void run() {
		for (long i = this.start; i <= this.end; i++) {
			sum += i;
		}
	}
}

public class Test1 {
	public static void main(String[] args) {
		PartialSum s = new PartialSum(0, 1000, 4);
		s.start();

		try {
			s.join();
		} catch (InterruptedException e) {

		}
		System.out.println(s.getSum());
	}

}
